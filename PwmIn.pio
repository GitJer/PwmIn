
.program PwmIn

; algorithm:

; loop:
;    reset the 'timer'
;    loop: 
;       decrement timer
;       test for falling edge 
;    record timer value as pulse width (actually, (0xFFFFFFFF - x)*2*1/125MHz is the pulse width)
;    loop:
;       decrement timer
;       test for rising edge
;    record the timer value as period (actually, ... its complicated, see below)


; Notes: 
;   - the pulsewidth is measured in a loop with 2 instructions
;   - the rest of the period is measured in a loop with 3 instructions
 
start:
    mov x ~NULL     ; start with the value 0xFFFFFFFF 

timer:
    jmp x-- test    ; count down
    jmp timerstop   ; timer has reached 0, stop count down
test:
    jmp pin timer   ; test if the pin is still 1, if so, continue counting down
timerstop:          ; pulse is over (or timer has reached 0)
    mov ISR x       ; move the value in x to the ISR: the pulsewidth (0xFFFFFFFF-pulsewidth)
    push noblock    ; push the ISR into the RX FIFO

timer2:
    jmp x-- test2   ; count down
    jmp timerstop2  ; timer has reached 0, stop count down
test2:
    jmp pin timerstop2  ; test if the pin has become 1
    jmp timer2          ; if not, continue the count down
timerstop2:
    mov ISR x       ; move the value in x to the ISR: the period (0xFFFFFFFF-period)
    push noblock    ; push the ISR into the RX FIFO

    jmp start

